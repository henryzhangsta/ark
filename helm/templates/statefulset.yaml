{{- if .Values.deployment.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "ark.fullname" . }}
spec:
  serviceName: {{ template "ark.name" . }}
  replicas: 1
  updateStrategy:
    type: {{ .Values.deployment.updateStrategy }}
  selector:
    matchLabels:
      app: {{ template "ark.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "ark.fullname" . }}
        app.kubernetes.io/name: {{ include "ark.name" . }}
    spec:
      securityContext:
        fsGroup: {{ .Values.fsGroup }}
      initContainers:
      - name: "{{ .Chart.Name }}-update"
        image: {{ default "henryzhangsta/ark" .Values.image }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.imagePullPolicy }}
        volumeMounts:
        - name: server
          mountPath: /ark/server
        - name: config
          mountPath: /ark/config
        command:
        - "./update.sh"
      containers:
      - name: {{ .Chart.Name }}
        image: {{ default "henryzhangsta/ark" .Values.image }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.imagePullPolicy }}
        ports:
        - containerPort: {{ .Values.instance.clientPort }}
          protocol: UDP
        - containerPort: {{ add .Values.instance.clientPort 1 }}
          protocol: UDP
        - containerPort: {{ .Values.instance.queryPort }}
          protocol: UDP
        - containerPort: 27020
          protocol: TCP
        env:
        - name: MAP
          value: "{{ .Values.instance.map }}"
        - name: CLIENT_PORT
          value: "{{ .Values.instance.clientPort }}"
        - name: QUERY_PORT
          value: "{{ .Values.instance.queryPort }}"
        - name: MAX_PLAYERS
          value: "{{ .Values.instance.maxPlayers }}"
        - name: SESSION_NAME
          value: "{{ .Values.instance.name }}"
        - name: SERVER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ include "ark.fullname" . }}-passwords"
              key: password
        - name: SERVER_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ include "ark.fullname" . }}-passwords"
              key: adminPassword
        - name: EXTRA_SERVER_OPTS
          value: "{{ .Values.instance.extraServerOpts }}"
        {{- if .Values.cluster.enabled }}
        - name: CLUSTER_ID
          value: "{{ .Values.cluster.id }}"
        {{- end }}
        command:
        - "./startserver.sh"
        volumeMounts:
        - name: server
          mountPath: /ark/server
        - name: config
          mountPath: /ark/config
          readOnly: true
        {{- if .Values.cluster.enabled }}
        - name: cluster
          mountPath: /ark/cluster
        {{- end }}
        - name: save
          mountPath: /ark/save
        resources:
          requests:
            memory: 3Gi
            cpu: "1.5"
        lifecycle:
          preStop:
            exec:
              command:
              - /usr/bin/pkill
              - "-2"
              - "ShooterGame"
      volumes:
      - name: server
        persistentVolumeClaim:
          claimName: {{ include "ark.volumeName" (dict "Values" .Values "Chart" .Chart "Release" .Release "name" "server" "shared" .Values.volumes.server.shared) }}
      {{- if .Values.cluster.enabled }}
      - name: cluster
        persistentVolumeClaim:
          claimName: {{ include "ark.volumeName" (dict "Values" .Values "Chart" .Chart "Release" .Release "name" "cluster" "shared" .Values.volumes.cluster.shared) }}
      {{- end }}
      - name: config
        persistentVolumeClaim:
          claimName: {{ include "ark.volumeName" (dict "Values" .Values "Chart" .Chart "Release" .Release "name" "config" "shared" .Values.volumes.config.shared) }}
      # Give up to 3 minutes for shutdown
      terminationGracePeriodSeconds: 180
  volumeClaimTemplates:
  - metadata:
      name: save
    spec:
      {{- $volume := index .Values.volumes "save" }}
      storageClassName: {{ $volume.storageClassName }}
      volumeName: "{{ include "ark.fullname" . }}-save"
      volumeMode: Filesystem
      accessModes:
      - {{ $volume.accessMode }}
      resources:
        requests:
          storage: {{ $volume.capacity }}
{{ end -}}
